<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/context     
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">
   
   <!-- 注释bean，所以下面的配置可以不用了 -->
  <!-- 表示告诉Spring要用注解的方式进行配置 -->
 <!--  <context:annotation-config/>
  
    <bean name="c" class="com.how2java.pojo.Category">
        <property name="name" value="category 1" />
    </bean>
  
      <bean name="p" class="com.how2java.pojo.Product">
        <property name="name" value="product 1" />
        <property name="category" ref="c"/>
    </bean> -->
    
  <!--   上述例子是对注入对象行为的注解，那么bean对象本身，
  	比如Category,Product可不可以移出applicationContext.xml配置文件，也通过注解进行呢？
	接下来就讲解如何对Bean进行注解配置 -->
    <context:component-scan base-package="com.how2java.pojo"/>
    
    <!-- 注释bean，所以下面的配置可以不用了 -->
<!-- 	<bean name="s" class="com.how2java.service.ProductService">
    </bean>   
     
    <bean id="loggerAspect" class="com.how2java.aspect.LoggerAspect"/>
     
    <aop:config>
        <aop:pointcut id="loggerCutpoint"
            expression=
            "execution(* com.how2java.service.ProductService.*(..)) "/>
             
        <aop:aspect id="logAspect" ref="loggerAspect">
            <aop:around pointcut-ref="loggerCutpoint" method="log"/>
        </aop:aspect>
    </aop:config>     -->
    
    <context:component-scan base-package="com.how2java.aspect"/>
    <context:component-scan base-package="com.how2java.service"/>
    <aop:aspectj-autoproxy/> 
    
</beans>